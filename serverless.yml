org: jorgeleonv
service: proyecto-api-avance-academico

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 1024
  timeout: 29 # Reducido para cumplir con API Gateway
  iam:
    role: arn:aws:iam::831178165254:role/LabRole
  environment:
    TABLE_NAME: ${sls:stage}-t_avance_academico # Nombre dinámico de la tabla DynamoDB

functions:
  CrearAvance:
    handler: CrearAvance.handler
    name: ${sls:stage}-CrearAvance
    events:
      - http:
          path: /avance/crear
          method: post
          cors: true
          integration: lambda
          request:
            template:
              application/json: |
                {
                  "method": "$context.httpMethod",
                  "path": "$context.path",
                  "headers": {
                    "Authorization": "$input.params('Authorization')"
                  },
                  "body": $input.body
                }

  AvanceTotal:
    handler: AvanceTotal.handler
    name: ${sls:stage}-AvanceTotal
    events:
      - http:
          path: /avance/total
          method: get
          cors: true
          integration: lambda
          request:
            template:
              application/json: |
                {
                  "method": "$context.httpMethod",
                  "path": "$context.path",
                  "headers": {
                    "Authorization": "$input.params('Authorization')"
                  }
                }

resources:
  Resources:
    TablaAvanceAcademico:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: tenant_id#user_id
            AttributeType: S
          - AttributeName: level#curso_id
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id#user_id
            KeyType: HASH
          - AttributeName: level#curso_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST # Facturación basada en uso
